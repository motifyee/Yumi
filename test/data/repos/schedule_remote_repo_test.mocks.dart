// Mocks generated by Mockito 5.4.4 from annotations
// in yumi/test/data/repos/schedule_remote_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:yumi/domain/schedule/data/sources/remote/schedule_remote_source.dart'
    as _i4;
import 'package:yumi/domain/schedule/entities/schedule.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchedule_1 extends _i1.SmartFake implements _i3.Schedule {
  _FakeSchedule_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ScheduleRemoteSrc].
///
/// See the documentation for Mockito's code generation for more information.
class MockScheduleRemoteSrc extends _i1.Mock implements _i4.ScheduleRemoteSrc {
  @override
  _i2.Dio get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Dio);

  @override
  _i5.Future<_i3.Schedule> getMySchedule() => (super.noSuchMethod(
        Invocation.method(
          #getMySchedule,
          [],
        ),
        returnValue: _i5.Future<_i3.Schedule>.value(_FakeSchedule_1(
          this,
          Invocation.method(
            #getMySchedule,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Schedule>.value(_FakeSchedule_1(
          this,
          Invocation.method(
            #getMySchedule,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Schedule>);

  @override
  _i5.Future<String> saveMySchedule(_i3.Schedule? schedule) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMySchedule,
          [schedule],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #saveMySchedule,
            [schedule],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #saveMySchedule,
            [schedule],
          ),
        )),
      ) as _i5.Future<String>);
}
